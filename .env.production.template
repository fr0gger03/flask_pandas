# Production Environment Configuration for Flask Workload Parser
# Copy this file to .env.production and update with your actual values

# Flask Configuration
FLASK_ENV=production
FLASK_DEBUG=False
SECRET_KEY=your-super-secret-key-change-this-in-production-use-random-64-chars

# Database Configuration
# Use PostgreSQL for production
POSTGRES_PASSWORD=secure-production-password-change-this
DATABASE_URL=postgresql://inventorydbuser:secure-production-password-change-this@db:5432/inventorydb

# Security Settings
WTF_CSRF_ENABLED=True
WTF_CSRF_TIME_LIMIT=3600

# File Upload Configuration - 10GB Support
UPLOAD_FOLDER=parser/input/
MAX_CONTENT_LENGTH=10737418240  # 10GB in bytes (10 * 1024 * 1024 * 1024)

# Alternative file size limits (uncomment to use different limits):
# MAX_CONTENT_LENGTH=1073741824    # 1GB
# MAX_CONTENT_LENGTH=5368709120    # 5GB
# MAX_CONTENT_LENGTH=21474836480   # 20GB

# Redis Configuration (optional - for session storage and caching)
# Uncomment if using Redis:
# REDIS_URL=redis://redis:6379/0
# SESSION_TYPE=redis
# SESSION_REDIS_URL=redis://redis:6379/0
# SESSION_PERMANENT=False
# SESSION_USE_SIGNER=True
# SESSION_KEY_PREFIX=workload_parser:

# Sentry Configuration (optional - for error monitoring)
# Get your DSN from https://sentry.io
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s %(levelname)s %(name)s %(message)s

# Server Configuration (if using in production with domain)
# SERVER_NAME=your-domain.com
# PREFERRED_URL_SCHEME=https

# Performance Tuning
# Gunicorn workers (calculated automatically, but can override)
# GUNICORN_WORKERS=4

# Application-specific settings
# Max rows to process in memory at once (for very large files)
PANDAS_CHUNK_SIZE=10000

# Database connection pool settings (optional)
# SQLALCHEMY_ENGINE_OPTIONS={"pool_pre_ping": True, "pool_recycle": 300}

# File processing settings
# Maximum processing time for uploads (seconds)
UPLOAD_TIMEOUT=3600  # 1 hour

# Cleanup settings
# Delete uploaded files after processing (True/False)
CLEANUP_UPLOADS=True

# Memory management
# Maximum memory usage for pandas operations (MB)
PANDAS_MAX_MEMORY=2048  # 2GB

# Additional environment variables for container deployment
PYTHONUNBUFFERED=1
PYTHONDONTWRITEBYTECODE=1

# Deployment Information (for reference)
# DEPLOYMENT_DATE=2024-01-01
# VERSION=1.0.0
# ENVIRONMENT=production

# Instructions:
# 1. Copy this file: cp .env.production.template .env.production
# 2. Update all placeholder values with actual production values
# 3. Generate a secure SECRET_KEY (64 random characters)
# 4. Set a strong POSTGRES_PASSWORD
# 5. Configure your domain in SERVER_NAME if applicable
# 6. Set up Sentry DSN if using error monitoring
# 7. Adjust MAX_CONTENT_LENGTH if you need different file size limits
#
# Security Notes:
# - Never commit .env.production to version control
# - Use strong, unique passwords
# - Regularly rotate secrets
# - Monitor logs for suspicious activity
# - Keep backups of your database
#
# File Size Reference:
# 100MB  = 104857600 bytes
# 500MB  = 524288000 bytes
# 1GB    = 1073741824 bytes
# 5GB    = 5368709120 bytes
# 10GB   = 10737418240 bytes
# 20GB   = 21474836480 bytes
