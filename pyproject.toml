[project]
name = "parser"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "bcrypt==4.3.0",
    "blinker==1.9.0",
    "click==8.1.8",
    "et-xmlfile==2.0.0",
    "flask==3.1.1",
    "flask-bcrypt==1.0.1",
    "flask-login==0.6.3",
    "flask-sqlalchemy==3.1.1",
    "flask-wtf==1.2.2",
    "itsdangerous==2.2.0",
    "jinja2==3.1.6",
    "markupsafe==3.0.2",
    "numpy==2.2.5",
    "openpyxl==3.1.5",
    "pandas==2.2.3",
    "psycopg2-binary==2.9.10",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.1.0",
    "pytz==2025.2",
    "six==1.17.0",
    "sqlalchemy==2.0.40",
    "typing-extensions==4.13.2",
    "tzdata==2025.2",
    "werkzeug==3.1.3",
    "wtforms==3.2.1",
]

[dependency-groups]
dev = [
    "flask-testing>=0.8.1",
    "pytest>=8.4.0",
    "pytest-flask>=1.3.0",
    "pytest-cov>=6.0.0",
    "coverage[toml]>=7.6.0",
    "testcontainers[postgres]>=4.10.0",
]
prod = [
    "gunicorn>=21.2.0",
]

[tool.coverage.run]
source = ["parser"]
omit = [
    "*/tests/*",
    "*/test_*",
    "parser/app.py",  # Exclude app factory for cleaner coverage
    "parser/__init__.py",
    "*/__pycache__/*",
    "*/migrations/*"
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\(Protocol\\):",
    "@(abc\\.)?abstractmethod"
]
ignore_errors = true
show_missing = true
skip_covered = false
skip_empty = false
sort = "Cover"
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
